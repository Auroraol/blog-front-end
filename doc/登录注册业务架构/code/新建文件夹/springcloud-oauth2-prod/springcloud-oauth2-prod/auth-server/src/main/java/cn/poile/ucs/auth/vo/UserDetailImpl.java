package cn.poile.ucs.auth.vo;import cn.poile.ucs.auth.entity.SysAuthority;import cn.poile.ucs.auth.entity.SysUser;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.userdetails.UserDetails;import java.util.Collection;import java.util.List;/** * @author yaohw * @date 2019-09-25 16:12 */public class UserDetailImpl implements UserDetails {    private Collection<? extends GrantedAuthority> authorities;    private Integer id;    private String username;    private String password;    private boolean isEnabled;    public UserDetailImpl(SysUser sysUser, List<SysAuthority> sysAuthorities) {        this.isEnabled = sysUser.getEnable() != null && sysUser.getEnable().equals(1);        this.id = sysUser.getId();        this.username = sysUser.getUsername();        this.password = sysUser.getPassword();        setAuthorities(sysAuthorities);    }    @Override    public Collection<? extends GrantedAuthority> getAuthorities() {        return this.authorities;    }    @Override    public String getPassword() {        return this.password;    }    @Override    public String getUsername() {        return this.username;    }    @Override    public boolean isAccountNonExpired() {        return true;    }    @Override    public boolean isAccountNonLocked() {        return true;    }    @Override    public boolean isCredentialsNonExpired() {        return true;    }    @Override    public boolean isEnabled() {        return isEnabled;    }    private void setAuthorities(Collection<? extends GrantedAuthority> authorities) {        this.authorities = authorities;    }    public Integer getId() {        return id;    }}